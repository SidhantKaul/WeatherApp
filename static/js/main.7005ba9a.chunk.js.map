{"version":3,"sources":["components/Brand.jsx","components/Search.jsx","components/Subdiv.jsx","components/Card.jsx","components/Locator.jsx","components/App.js","index.js"],"names":["Brand","className","href","Search","props","useState","key","setKey","city","setCity","test","setTest","comp","setComp","currentWeather","setCurrentWeather","forecast","setForecast","React","useEffect","a","fetch","response1","json","data1","response2","data2","error","console","log","cod","fetchData","onClick","JSON","stringify","city_name","InputGroup","FormControl","placeholder","onChange","event","value","target","Button","variant","id","days","Date","Subdiv","data","map","elem","index","url","weather","icon","valid_date","getDay","substring","getDate","getMonth","src","alt","description","max_temp","min_temp","Card","d","arr","filter","name","datetime","main","temp","wind","speed","humidity","Locator","lat","setLat","lon","setLon","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","latString","lonString","style","color","marginLeft","year","getFullYear","App","process","start","displayWeather","setDisplayWeather","test1","setTest1","fontSize","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7005ba9a.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\n\r\nfunction Brand() {\r\nreturn (\r\n  <div className=\"brand-div\">\r\n    <a className=\"brand\" href=\"/\">Weather Watch</a>\r\n  </div>\r\n);\r\n}\r\nexport default Brand;\r\n","import React,{useState} from \"react\";\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Button from \"react-bootstrap/Button\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nfunction Search(props) {\r\n  // console.log(\"#\");\r\n  const [key, setKey] = useState(\"\");\r\n  const [city,setCity] = useState(\"\");\r\n  const [test,setTest] = useState(false);\r\n  const [comp,setComp] = useState(\"\");\r\n  const [currentWeather,setCurrentWeather] = useState({});\r\n  const [forecast,setForecast] = useState({});\r\n  const toQualify = {\r\n    error:\"not found\"\r\n  }\r\n  React.useEffect(() => {\r\n    async function fetchData() {\r\n\r\n        const response1 = await fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\"+key+\"&appid=\"+process.env.REACT_APP_API_KEY+\"&units=metric\");\r\n        const data1 = await response1.json();\r\n        let response2 = {};\r\n        let data2 = {\r\n          error:\"not found\"\r\n        };\r\n        console.log(data1);\r\n        if(data1.cod===200) {\r\n            response2 = await fetch(\"https://api.weatherbit.io/v2.0/forecast/daily?city=\"+key+\"&key=\"+process.env.REACT_APP_API_KEY2);\r\n            data2 = await response2.json();\r\n        }\r\n        console.log(data2);\r\n        await setCurrentWeather(data1);\r\n        await setForecast(data2);\r\n\r\n    };\r\n    fetchData()\r\n  },[city]);\r\n  // console.log(currentWeather);\r\nif(test&&currentWeather.cod!==\"400\") {\r\n  console.log(\"SDFGHJKLXCVBNM<>\");\r\n  props.onClick(currentWeather,forecast);\r\n  if(JSON.stringify(forecast) !== JSON.stringify(toQualify)&&forecast.city_name!==comp) {\r\n   console.log(comp);\r\n   setTest(false);\r\n   setComp(forecast.city_name);\r\n   setKey(\"\");\r\n   setCity(\"\");\r\n}\r\n\r\n}\r\n  function setSearch(event) {\r\n    setTest(false);\r\n    let value = event.target.value;\r\n    setKey(value);\r\n    }\r\n  function searchWeather() {\r\n    setCity(key);\r\n    setTest(true);\r\n    // console.log(currentWeather);\r\n  }\r\n  return (\r\n    <div className=\"search-div\">\r\n    <InputGroup className=\"mb-3 shadow-none\">\r\n  <FormControl\r\n    className=\"shadow-none form-control\"\r\n    placeholder=\"Enter your city's name\"\r\n    aria-label=\"Recipient's username\"\r\n    aria-describedby=\"basic-addon2\"\r\n    onChange={setSearch}\r\n    value={key}\r\n  />\r\n  <Button onClick={searchWeather} className=\"btn1 shadow-none\" variant=\"outline-secondary\" id=\"button-addon2\">\r\n    <SearchIcon />\r\n  </Button>\r\n</InputGroup>\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default Search;\r\n","import React from \"react\";\r\nconst d = new Date();\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\nfunction Subdiv(props) {\r\n  console.log(props.data);\r\n  function mapFunction(elem,index) {\r\n    const url = \"https://www.weatherbit.io/static/img/icons/\"+elem.weather.icon+\".png\"\r\n    return <div className=\"flex-item\">\r\n    <div className=\"left\">\r\n      <p className=\"date-para\">{days[new Date(elem.valid_date).getDay()].substring(0,3)} {new Date(elem.valid_date).getDate()} / {new Date(elem.valid_date).getMonth()+1}</p>\r\n      <div className=\"icon-div\">\r\n        <div className=\"icon-div-img\">\r\n          <img className=\"every-img\" src={url} alt=\"weather-icon\"/>\r\n        </div>\r\n      </div>\r\n      <p className=\"down-data\">{elem.weather.description}</p>\r\n      <p className=\"down-data\">{elem.max_temp} / {elem.min_temp} C</p>\r\n      </div>\r\n      {index>=0&&index<3&&<div className=\"vertical\"></div>}\r\n    </div>\r\n  }\r\n  return (\r\n    <div className=\"flexbox\">\r\n      {props.data.map(mapFunction)}\r\n    </div>\r\n  );\r\n}\r\nexport default Subdiv;\r\n","import React from \"react\";\r\nimport Subdiv from \"./Subdiv\"\r\nfunction Card(props) {\r\n  console.log(props.forecast);\r\n  console.log(props.currentWeather);\r\n  const url = \"https://www.weatherbit.io/static/img/icons/\"+props.forecast.data[0].weather.icon+\".png\";\r\n  const d = new Date();\r\n  console.log(d.getMonth());\r\n  const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  const arr = props.forecast.data.filter(function(data,index) {\r\n    return index>0&&index<5;\r\n  });\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"upper-card\">\r\n      <div className=\"left-sub\">\r\n          <div className=\"card-sub-div\">\r\n            <h3>{props.currentWeather.name}</h3>\r\n            <p>{days[d.getDay(props.forecast.data[0].datetime)].substring(0,3)} {d.getDate()} / {d.getMonth()+1}</p>\r\n            <hr/>\r\n          </div>\r\n          <div className=\"card-sub-div\">\r\n          <h3>{props.currentWeather.main.temp} C</h3>\r\n          <p>{props.forecast.data[0].max_temp} / {props.forecast.data[0].min_temp} C</p>\r\n          <p>{props.currentWeather.weather[0].description}</p>\r\n          <hr/>\r\n          </div>\r\n          <div className=\"card-sub-div\">\r\n            <p>Wind: {props.currentWeather.wind.speed} km/h</p>\r\n            <p>Humidity: {props.currentWeather.main.humidity} %</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"weather-icon\">\r\n          <div className=\"img-div\">\r\n            <img className=\"every-img\" src={url} alt=\"weather-icon\"/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"lower-card\" >\r\n        <Subdiv data = {arr} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Card;\r\n","import React,{useState} from \"react\";\r\nimport RoomIcon from '@material-ui/icons/Room';\r\nfunction Locator(props) {\r\n  const [test,setTest] = useState(false);\r\n  const [lat,setLat] = useState(\"\");\r\n  const [lon,setLon] = useState(\"\");\r\n  const [currentWeather,setCurrentWeather] = useState({});\r\n  const [forecast,setForecast] = useState({});\r\n  const toQualify = {\r\n    error:\"not found\"\r\n  }\r\n  React.useEffect(() => {\r\n    async function fetchData() {\r\n\r\n        const response1 = await fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\"+lat+\"&lon=\"+lon+\"&appid=\"+process.env.REACT_APP_API_KEY+\"&units=metric\");\r\n        const data1 = await response1.json();\r\n        let response2 = {};\r\n        let data2 = {\r\n          error:\"not found\"\r\n        };\r\n        console.log(data1);\r\n        if(data1.cod===200) {\r\n            response2 = await fetch(\"https://api.weatherbit.io/v2.0/forecast/daily?lat=\"+lat+\"&lon=\"+lon+\"&key=\"+process.env.REACT_APP_API_KEY2);\r\n            data2 = await response2.json();\r\n        }\r\n        console.log(data2);\r\n        await setCurrentWeather(data1);\r\n        await setForecast(data2);\r\n    };\r\n    fetchData()\r\n  },[lat,lon]);\r\n  if(test&&currentWeather.cod!==\"400\") {\r\n    console.log(\"LL\");\r\n    console.log(currentWeather);\r\n    console.log(forecast);\r\n    props.onClick(currentWeather,forecast);\r\n    if(JSON.stringify(forecast) !== JSON.stringify(toQualify) ) {\r\n    setTest(false);  \r\n    }\r\n  }\r\n  // if(forecast.error!==\"not found\")\r\n  // setTest(false);\r\n\r\n  function getPosition() {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n    const { latitude, longitude } = position.coords;\r\n    let latString = \"\"+latitude;\r\n    latString = latString.substring(0,7);\r\n    let lonString = \"\"+longitude;\r\n    lonString = lonString.substring(0,7);\r\n    setLat(latString);\r\n    setLon(lonString)\r\n    console.log(latitude+\" \"+longitude);\r\n    setTest(true);\r\n});\r\n  }\r\n  return (\r\n    <div  className=\"pointer\">\r\n    <RoomIcon onClick={getPosition}style={{color:\"#276678\", marginLeft:\"1%\"}} />\r\n    </div>\r\n  );\r\n};\r\nexport default Locator;\r\n","import React,{useState} from \"react\";\nimport Brand from \"./Brand\"\nimport Search from \"./Search\";\nimport Card from \"./Card\";\nimport BlockIcon from '@material-ui/icons/Block';\nimport CloudOutlinedIcon from '@material-ui/icons/CloudOutlined';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport CopyrightIcon from '@material-ui/icons/Copyright';\nimport Locator from \"./Locator.jsx\";\nconst d = new Date();\nconst year = d.getFullYear();\n// const url =\"https://api.weatherbit.io/v2.0/current?&city=Raleigh&key=8b44c80627ff4ca5a76cc9783948d912&units=M\";\nfunction App() {\n  console.log(process.env.REACT_APP_API_KEY2);\n  const [displayWeather, setDisplayWeather] = useState({\n    start: \"initialize\"\n  });\n  const [forecast,setForecast] = useState({});\n  const [test,setTest] = useState(false);\n  const [test1,setTest1] = useState(false);\n  const [testgeo,setTestgeo] = useState(false);\n  const [testsearch,setTestsearch] = useState(false);\n  async function sendData(data1,data2) {\n    // console.log(data1);\n    console.log(\"here\");\n      console.log(data2);\n    await setDisplayWeather(data1);\n    await setForecast(data2);\n    await setTest(true);\n  }\n  async function sendDataGeo(data1,data2) {\n    // console.log(data1);\n    console.log(\"here\");\n    console.log(data1);\n    console.log(data2);\n    await setDisplayWeather(data1);\n    await setForecast(data2);\n    await setTest1(true);\n  }\n  // if(displayWeather.cod===200)\n  // setTest(true);\n\nreturn (\n  <div className=\"outer\">\n    <Brand />\n    <Locator onClick={sendDataGeo}/>\n    <Search onClick={sendData} />\n    {(forecast.error!==\"not found\"&&(test||test1)&&displayWeather.cod!==\"404\") ? <Card currentWeather={displayWeather} forecast={forecast} /> : null}\n    {displayWeather.cod===\"404\"&& <div className=\"Not-found\"><h1><BlockIcon style={{fontSize: \"3rem\"}}/> 404 : City Not Found </h1></div>}\n    {displayWeather.start===\"initialize\"&&<div className=\"icon-start\"><CloudOutlinedIcon style={{color: \"#276678\",fontSize: \"5rem\"}} /></div>}\n    <footer><p>made by sidhant kaul <CopyrightIcon /> {year} </p>\n      <a href=\"https://www.linkedin.com/in/sidhant-kaul-203030179/\"><LinkedInIcon style={{color: \"#276678\"}}/></a>\n      <a href=\"https://github.com/SidhantKaul\"><GitHubIcon style={{color: \"#276678\"}}/></a>\n    </footer>\n  </div>\n);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}